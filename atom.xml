<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://heuje.top</id>
    <title>Gridea</title>
    <updated>2019-06-05T05:06:48.972Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://heuje.top"/>
    <link rel="self" href="https://heuje.top/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://heuje.top/images/avatar.png</logo>
    <icon>https://heuje.top/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[docker下MySQL基本操作]]></title>
        <id>https://heuje.top/post/docker-xia-mysql-ji-ben-cao-zuo</id>
        <link href="https://heuje.top/post/docker-xia-mysql-ji-ben-cao-zuo">
        </link>
        <updated>2019-06-05T04:50:55.000Z</updated>
        <content type="html"><![CDATA[<p>安装:
在docker仓库搜索MySQL镜像
docker search mysql
下载镜像
docker pull mysql
查看本地镜像
docker images -a</p>
<p>启动MySQL</p>
<ol>
<li>
<p>启动 mysql 容器，并进入 shell 命令交互界面： docker run -it mysql /bin/bash
(  参数 -i -t 等价于 -it  表示insert , 进入 ;  /bin/bash 表示 shell 脚本交互界面 )</p>
</li>
<li>
<p>可用 mysql --help | grep Distrib 查看 mysql 版本信息
（ mysql --help 查看帮助信息，并在结果集中 查找 Distrib ，
“|”单竖线表示命令的连续执行，同时以前一个命令值域作为后一个命令的定义域 ）</p>
</li>
<li>
<p>退出 当前交互窗口：exit 。此操作会关闭 mysql 服务 。
（对于创建的bush 容器，exit 退出后，容器也会退出。
这是因为对Docker 来说，容器中的应用退出了，容器也就没有必要继续运行了。）</p>
</li>
</ol>
<p>—— 想要服务一直运行可以：</p>
<h2 id="docker-run-p-33063306-name-jy_mysql-e-mysql_root_password123456-d-mysql参数-p-设置端口-name-取名-e-mysql_root_password123456-设置-账号为-root-密码为-123456-d-表示作为一个守护进程在后台运行">docker run -p 3306:3306 --name JY_mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql
（参数 -p 设置端口，--name 取名 ，-e MYSQL_ROOT_PASSWORD=123456 设置 账号为 root ，密码为 123456 ，    -d 表示作为一个守护进程在后台运行 ）</h2>
<p>原文：https://blog.csdn.net/jiangyu1013/article/details/79958410</p>
<p>进入MySQL
docker ps -a
docker port 容器名字
至于相关文件地址配置 ，可以在运行容器时设置(但要求对应路径对应文件已存在，才能成功挂载相内容到对应位置。)
docker run -p 3306:3306 --name mysql -v $PWD/conf/my.cnf:/etc/mysql/my.cnf -v $PWD/logs:/logs -v $PWD/data:/mysql_data -e MYSQL_ROOT_PASSWORD=123456 -d mysql
命令说明：</p>
<p>-p 3306:3306：将容器的3306端口映射到主机的3306端口</p>
<p>-v $PWD/conf/my.cnf:/etc/mysql/my.cnf：将主机当前目录下的conf/my.cnf挂载到容器的/etc/mysql/my.cnf</p>
<p>-v $PWD/logs:/logs：将主机当前目录下的logs目录挂载到容器的/logs</p>
<p>-v $PWD/data:/mysql_data：将主机当前目录下的data目录挂载到容器的/mysql_data</p>
<p>-e MYSQL_ROOT_PASSWORD=123456：初始化root用户的密码</p>
<p>docker exec -it 8b6952783afc /bin/bash</p>
<p>Ctrl + D退出</p>
<p>mysql -u root
use mysql
设置密码:
UPDATE user SET password=PASSWORD('新的密码') WHERE user='root';</p>
<p>设置存储上限
修改mysql/bin/my.ini
max_allowed_packet = 16M</p>
<p>登录数据库服务
mysql -h 127.0.0.1 -u root -p -P 3306</p>
<p>修改权限，使得用户在其他主机仍然能够登录root用户并访问数据库
grant all privileges on <em>.</em> to 'root'@'%' identified by '你的密码' with grant option;</p>
<p>修改sql_mode:
set sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';</p>
<p>如果上面设置完成后依然报错，这里执行下面的SQL，将全局设置更改，然后必须关闭现有的连接，重新打开连接后查询即可</p>
<h2 id="set-global-sql_modestrict_trans_tablesno_zero_in_dateno_zero_dateerror_for_division_by_zerono_auto_create_userno_engine_substitution">set global sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';</h2>
<p>原文：https://blog.csdn.net/qq_28867949/article/details/76850378</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://heuje.top/post/hello-gridea</id>
        <link href="https://heuje.top/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>